'\" t
.\"     Title: fam_atomic_128_compare_store
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 03/27/2019
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "FAM_ATOMIC_128_COMPA" "3" "03/27/2019" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
fam_atomic_128_compare_store \- 128 bit fam atomic compare and store
.SH "SYNOPSIS"
.sp
.nf
#include <fam_atomic\&.h>

void
fam_atomic_128_compare_store(int64_t *address,
                             int64_t compare[2],
                             int64_t store[2],
                             int64_t result[2]);

cc \&.\&.\&. \-lfam_atomic
.fi
.SH "DESCRIPTION"
.sp
Given \fIaddress\fR, which is a pointer to a 128 bit fam atomic variable, reads the contents of the atomic variable and checks if it is equal to \fIcompare\fR\&. If true, the variable gets set to \fIstore\fR\&. If false, the variable does not get modified\&. The original value that was read gets stored into \fIresult\fR\&.
.sp
\fIcompare\fR, \fIstore,\fR and \fIresult\fR are all arrays of two 64 bit integers representing 128 bit variables, where index [0] represents the first 64 bits and index [1] represents the last 64 bits\&.
.sp
After calling this function, applications would typically check if \fIresult\fR is equivalent to \fIcompare\fR to verify if the operation succeeded\&.
.SH "RETURN VALUE"
.sp
None, the previous value gets stored in \fIresult\fR\&.
